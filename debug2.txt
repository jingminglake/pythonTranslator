Starting parse
Entering state 0
Reducing stack by rule 6 (line 85):
-> $$ = nterm star_NEWLINE_stmt (: )
Stack now 0
Entering state 3
Reading a token: Next token is token NAME (: )
Shifting token NAME (: )
Entering state 38
Reducing stack by rule 228 (line 838):
   $1 = token NAME (: )
-> $$ = nterm atom (: )
Stack now 0 3
Entering state 85
Reducing stack by rule 223 (line 823):
-> $$ = nterm star_trailer (: )
Stack now 0 3 85
Entering state 169
Reading a token: Next token is token EQUAL (: )
Reducing stack by rule 221 (line 814):
   $1 = nterm atom (: )
   $2 = nterm star_trailer (: )
-> $$ = nterm power (: )
Stack now 0 3
Entering state 84
Reducing stack by rule 216 (line 788):
   $1 = nterm power (: )
-> $$ = nterm factor (: )
Stack now 0 3
Entering state 82
Reducing stack by rule 209 (line 739):
   $1 = nterm factor (: )
-> $$ = nterm term (: )
Stack now 0 3
Entering state 81
Next token is token EQUAL (: )
Reducing stack by rule 205 (line 710):
   $1 = nterm term (: )
-> $$ = nterm arith_expr (: )
Stack now 0 3
Entering state 80
Next token is token EQUAL (: )
Reducing stack by rule 201 (line 697):
   $1 = nterm arith_expr (: )
-> $$ = nterm shift_expr (: )
Stack now 0 3
Entering state 79
Next token is token EQUAL (: )
Reducing stack by rule 199 (line 686):
   $1 = nterm shift_expr (: )
-> $$ = nterm and_expr (: )
Stack now 0 3
Entering state 78
Next token is token EQUAL (: )
Reducing stack by rule 197 (line 678):
   $1 = nterm and_expr (: )
-> $$ = nterm xor_expr (: )
Stack now 0 3
Entering state 77
Next token is token EQUAL (: )
Reducing stack by rule 195 (line 664):
   $1 = nterm xor_expr (: )
-> $$ = nterm expr (: )
Stack now 0 3
Entering state 76
Next token is token EQUAL (: )
Reducing stack by rule 182 (line 642):
   $1 = nterm expr (: )
-> $$ = nterm comparison (: )
Stack now 0 3
Entering state 75
Next token is token EQUAL (: )
Reducing stack by rule 181 (line 635):
   $1 = nterm comparison (: )
-> $$ = nterm not_test (: )
Stack now 0 3
Entering state 74
Reducing stack by rule 178 (line 622):
   $1 = nterm not_test (: )
-> $$ = nterm and_test (: )
Stack now 0 3
Entering state 73
Next token is token EQUAL (: )
Reducing stack by rule 176 (line 613):
   $1 = nterm and_test (: )
-> $$ = nterm or_test (: )
Stack now 0 3
Entering state 72
Next token is token EQUAL (: )
Reducing stack by rule 175 (line 610):
-> $$ = nterm opt_IF_ELSE (: )
Stack now 0 3 72
Entering state 141
Reducing stack by rule 172 (line 601):
   $1 = nterm or_test (: )
   $2 = nterm opt_IF_ELSE (: )
-> $$ = nterm test (: )
Stack now 0 3
Entering state 71
Reducing stack by rule 72 (line 370):
-> $$ = nterm star_COMMA_test (: )
Stack now 0 3 71
Entering state 138
Next token is token EQUAL (: )
Reducing stack by rule 269 (line 967):
   $1 = nterm test (: )
   $2 = nterm star_COMMA_test (: )
-> $$ = nterm testlist (: )
Stack now 0 3
Entering state 88
Next token is token EQUAL (: )
Reducing stack by rule 56 (line 300):
-> $$ = nterm star_EQUAL (: )
Stack now 0 3 88
Entering state 183
Next token is token EQUAL (: )
Shifting token EQUAL (: )
Entering state 256
Reading a token: Next token is token NAME (: )
Shifting token NAME (: )
Entering state 38
Reducing stack by rule 228 (line 838):
   $1 = token NAME (: )
-> $$ = nterm atom (: )
Stack now 0 3 88 183 256
Entering state 85
Reducing stack by rule 223 (line 823):
-> $$ = nterm star_trailer (: )
Stack now 0 3 88 183 256 85
Entering state 169
Reading a token: Next token is token EQUAL (: )
Reducing stack by rule 221 (line 814):
   $1 = nterm atom (: )
   $2 = nterm star_trailer (: )
-> $$ = nterm power (: )
Stack now 0 3 88 183 256
Entering state 84
Reducing stack by rule 216 (line 788):
   $1 = nterm power (: )
-> $$ = nterm factor (: )
Stack now 0 3 88 183 256
Entering state 82
Reducing stack by rule 209 (line 739):
   $1 = nterm factor (: )
-> $$ = nterm term (: )
Stack now 0 3 88 183 256
Entering state 81
Next token is token EQUAL (: )
Reducing stack by rule 205 (line 710):
   $1 = nterm term (: )
-> $$ = nterm arith_expr (: )
Stack now 0 3 88 183 256
Entering state 80
Next token is token EQUAL (: )
Reducing stack by rule 201 (line 697):
   $1 = nterm arith_expr (: )
-> $$ = nterm shift_expr (: )
Stack now 0 3 88 183 256
Entering state 79
Next token is token EQUAL (: )
Reducing stack by rule 199 (line 686):
   $1 = nterm shift_expr (: )
-> $$ = nterm and_expr (: )
Stack now 0 3 88 183 256
Entering state 78
Next token is token EQUAL (: )
Reducing stack by rule 197 (line 678):
   $1 = nterm and_expr (: )
-> $$ = nterm xor_expr (: )
Stack now 0 3 88 183 256
Entering state 77
Next token is token EQUAL (: )
Reducing stack by rule 195 (line 664):
   $1 = nterm xor_expr (: )
-> $$ = nterm expr (: )
Stack now 0 3 88 183 256
Entering state 76
Next token is token EQUAL (: )
Reducing stack by rule 182 (line 642):
   $1 = nterm expr (: )
-> $$ = nterm comparison (: )
Stack now 0 3 88 183 256
Entering state 75
Next token is token EQUAL (: )
Reducing stack by rule 181 (line 635):
   $1 = nterm comparison (: )
-> $$ = nterm not_test (: )
Stack now 0 3 88 183 256
Entering state 74
Reducing stack by rule 178 (line 622):
   $1 = nterm not_test (: )
-> $$ = nterm and_test (: )
Stack now 0 3 88 183 256
Entering state 73
Next token is token EQUAL (: )
Reducing stack by rule 176 (line 613):
   $1 = nterm and_test (: )
-> $$ = nterm or_test (: )
Stack now 0 3 88 183 256
Entering state 72
Next token is token EQUAL (: )
Reducing stack by rule 175 (line 610):
-> $$ = nterm opt_IF_ELSE (: )
Stack now 0 3 88 183 256 72
Entering state 141
Reducing stack by rule 172 (line 601):
   $1 = nterm or_test (: )
   $2 = nterm opt_IF_ELSE (: )
-> $$ = nterm test (: )
Stack now 0 3 88 183 256
Entering state 71
Reducing stack by rule 72 (line 370):
-> $$ = nterm star_COMMA_test (: )
Stack now 0 3 88 183 256 71
Entering state 138
Next token is token EQUAL (: )
Reducing stack by rule 269 (line 967):
   $1 = nterm test (: )
   $2 = nterm star_COMMA_test (: )
-> $$ = nterm testlist (: )
Stack now 0 3 88 183 256
Entering state 258
Reducing stack by rule 54 (line 279):
   $1 = nterm testlist (: )
-> $$ = nterm pick_yield_expr_testlist (: )
Stack now 0 3 88 183 256
Entering state 325
Reducing stack by rule 55 (line 286):
   $1 = nterm star_EQUAL (: )
   $2 = token EQUAL (: )
   $3 = nterm pick_yield_expr_testlist (: )
-> $$ = nterm star_EQUAL (: )
Stack now 0 3 88
Entering state 183
Next token is token EQUAL (: )
Shifting token EQUAL (: )
Entering state 256
Reading a token: Next token is token NAME (: )
Shifting token NAME (: )
Entering state 38
Reducing stack by rule 228 (line 838):
   $1 = token NAME (: )
-> $$ = nterm atom (: )
Stack now 0 3 88 183 256
Entering state 85
Reducing stack by rule 223 (line 823):
-> $$ = nterm star_trailer (: )
Stack now 0 3 88 183 256 85
Entering state 169
Reading a token: Next token is token EQUAL (: )
Reducing stack by rule 221 (line 814):
   $1 = nterm atom (: )
   $2 = nterm star_trailer (: )
-> $$ = nterm power (: )
Stack now 0 3 88 183 256
Entering state 84
Reducing stack by rule 216 (line 788):
   $1 = nterm power (: )
-> $$ = nterm factor (: )
Stack now 0 3 88 183 256
Entering state 82
Reducing stack by rule 209 (line 739):
   $1 = nterm factor (: )
-> $$ = nterm term (: )
Stack now 0 3 88 183 256
Entering state 81
Next token is token EQUAL (: )
Reducing stack by rule 205 (line 710):
   $1 = nterm term (: )
-> $$ = nterm arith_expr (: )
Stack now 0 3 88 183 256
Entering state 80
Next token is token EQUAL (: )
Reducing stack by rule 201 (line 697):
   $1 = nterm arith_expr (: )
-> $$ = nterm shift_expr (: )
Stack now 0 3 88 183 256
Entering state 79
Next token is token EQUAL (: )
Reducing stack by rule 199 (line 686):
   $1 = nterm shift_expr (: )
-> $$ = nterm and_expr (: )
Stack now 0 3 88 183 256
Entering state 78
Next token is token EQUAL (: )
Reducing stack by rule 197 (line 678):
   $1 = nterm and_expr (: )
-> $$ = nterm xor_expr (: )
Stack now 0 3 88 183 256
Entering state 77
Next token is token EQUAL (: )
Reducing stack by rule 195 (line 664):
   $1 = nterm xor_expr (: )
-> $$ = nterm expr (: )
Stack now 0 3 88 183 256
Entering state 76
Next token is token EQUAL (: )
Reducing stack by rule 182 (line 642):
   $1 = nterm expr (: )
-> $$ = nterm comparison (: )
Stack now 0 3 88 183 256
Entering state 75
Next token is token EQUAL (: )
Reducing stack by rule 181 (line 635):
   $1 = nterm comparison (: )
-> $$ = nterm not_test (: )
Stack now 0 3 88 183 256
Entering state 74
Reducing stack by rule 178 (line 622):
   $1 = nterm not_test (: )
-> $$ = nterm and_test (: )
Stack now 0 3 88 183 256
Entering state 73
Next token is token EQUAL (: )
Reducing stack by rule 176 (line 613):
   $1 = nterm and_test (: )
-> $$ = nterm or_test (: )
Stack now 0 3 88 183 256
Entering state 72
Next token is token EQUAL (: )
Reducing stack by rule 175 (line 610):
-> $$ = nterm opt_IF_ELSE (: )
Stack now 0 3 88 183 256 72
Entering state 141
Reducing stack by rule 172 (line 601):
   $1 = nterm or_test (: )
   $2 = nterm opt_IF_ELSE (: )
-> $$ = nterm test (: )
Stack now 0 3 88 183 256
Entering state 71
Reducing stack by rule 72 (line 370):
-> $$ = nterm star_COMMA_test (: )
Stack now 0 3 88 183 256 71
Entering state 138
Next token is token EQUAL (: )
Reducing stack by rule 269 (line 967):
   $1 = nterm test (: )
   $2 = nterm star_COMMA_test (: )
-> $$ = nterm testlist (: )
Stack now 0 3 88 183 256
Entering state 258
Reducing stack by rule 54 (line 279):
   $1 = nterm testlist (: )
-> $$ = nterm pick_yield_expr_testlist (: )
Stack now 0 3 88 183 256
Entering state 325
Reducing stack by rule 55 (line 286):
   $1 = nterm star_EQUAL (: )
   $2 = token EQUAL (: )
   $3 = nterm pick_yield_expr_testlist (: )
terminate called after throwing an instance of 'std::string'

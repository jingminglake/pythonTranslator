Name: Yaxiong Hu

Clemson Email Address: yaxionh@g.clemson.edu

Project no: 4

Project due date: November 13th, 2017

Project description: 

(1) Design and implement an AST to represent and interpret Python code. The AST could handle integer and float values and variables, print, assignment, and expressions such as '+', '-', '*', '/', '//', '%', '**', '()', '-x', '+x'.

(2) Build a symbol table to support asssginment such as '+=', '-=', '*=', '/=', '//='.

(3) Write adequately test cases and write test script test.py.


The easiest part of this project: Build symbol table to store the value of variables and also support insert, get, modify operations.

Problems that I had in completing this project:
(1) Solved the node symbol error problem when combined the Ast class to the parser.
(2) The format "x=y=z=1" problem. I solved it by modifying the star_Equal gramma from left rescurive to right rescurive .
(3) Floor divide is different from regular divide.
(4) Unary problem.
(5) The precision problem, I solved it by modifying the Float Class type from float to long double. Also, in Python, the precision of print statement (which is 12) is different from the precision of expression (which is 16). I support both of them.
(6) For expression 2.5*2, I print it by 5.0. So, it could match with the result of the Python. Also,for expression 123**12.32, I print it by 5.59282168401e+25, which also match with the result generated by Python.
(7) Handle memory leaks, in some cases the program have possibility loss condition which is hard to solve.

PS. (1) Also support bit operations like '&', '|', '^', '&=', '|=', '^='.
    (2) Also support unary '~'.
    (3) No memeory leaks.